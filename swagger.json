{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a Poverka  API aka ASUKMO",
    "version" : "1.0.0",
    "title" : "POVERKA API",
    "contact" : {
      "email" : "imail.for.iwork@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath" : "/api/v1/poverka",
  "schemes" : [ "http", "https" ],
  "host" : "localhost",
  "securityDefinitions" : {
    "BasicAuth" : {
      "type" : "basic"
    },
    "X-Auth-Token" : {
      "name" : "X-Auth-Token",
      "type" : "apiKey",
      "in" : "header"
    }
  },
  "paths" : {
    "/login" : {
      "post" : {
        "summary" : "login to app",
        "description" : "send login/pass encrypted to secret string, rturns a secret X-Auth-Token",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "consumes" : [ "application/json", "application/xhtml+xml" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Token"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/mi" : {
      "get" : {
        "summary" : "get all MI",
        "operationId" : "getAllMI",
        "description" : "get all available MI`s",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "description" : "id of MI, get a single MI",
          "required" : false,
          "type" : "integer"
        }, {
          "in" : "query",
          "name" : "name",
          "description" : "get by MI name",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "type",
          "description" : "get MI by type",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "dateStart",
          "description" : "start date of time period (if empty, get Records from all the time)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "dateEnd",
          "description" : "date of end a time period (if empty, get now date)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "term",
          "description" : "get by search term",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MeasurngInstrument"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "404" : {
            "description" : "Not Found. No one MI by search params is found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create new  MI",
        "operationId" : "createNewMI",
        "description" : "creates new MeasurmentInstrument",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "consumes" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "mi",
          "description" : "create new MI",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MeasurngInstrument"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      },
      "put" : {
        "summary" : "update MI",
        "description" : "update MI",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "consumes" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "mi",
          "description" : "create new MI",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MeasurngInstrument"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "schema" : {
              "type" : "string"
            }
          },
          "400" : {
            "description" : "bad request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "404" : {
            "description" : "Not Found. Not found MI for update",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete MI by id",
        "description" : "delete MI by id",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "description" : "id MI for delete",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "404" : {
            "description" : "Not Found. Not found MI for delete",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      }
    },
    "/record/{id}" : {
      "get" : {
        "summary" : "get record by id",
        "description" : "get record by id",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of Record",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Record"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "404" : {
            "description" : "Not Found. Not found Record by this id",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete Record by id",
        "description" : "delete Record by id",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "description" : "id of Record",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "404" : {
            "description" : "Not Found. Not found Record by this id for delete",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      }
    },
    "/record" : {
      "get" : {
        "summary" : "get records by query",
        "description" : "get MI Records of poverka by some parameters",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "description" : "id of Record, get a single Record",
          "required" : false,
          "type" : "integer"
        }, {
          "in" : "query",
          "name" : "miid",
          "description" : "id of MI, get all Records of this MI",
          "required" : false,
          "type" : "integer"
        }, {
          "in" : "query",
          "name" : "dateStart",
          "description" : "start date of time period (if empty, get Records from all the time)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "dateEnd",
          "description" : "sd",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "term",
          "description" : "term for search record",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Record"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "404" : {
            "description" : "Not Found. No one Record found by query params",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      },
      "post" : {
        "summary" : "add Record to MI",
        "description" : "add Record to MI by miid",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "record",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Record"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      },
      "put" : {
        "summary" : "update Record",
        "description" : "update Record",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "record",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Record"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete Record",
        "description" : "delete Record",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "description" : "id of Record, delete a single Record",
          "required" : false,
          "type" : "integer"
        }, {
          "in" : "query",
          "name" : "miid",
          "description" : "id of MI, delete all Records of this MI",
          "required" : false,
          "type" : "integer"
        }, {
          "in" : "query",
          "name" : "dateStart",
          "description" : "start date of time period (if empty, get Records from all the time)",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "dateEnd",
          "description" : "end date of time period (if empty )",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "query",
          "name" : "term",
          "description" : "asas",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "integer",
              "description" : "number of deleted objects"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      }
    },
    "/employee/{id}" : {
      "get" : {
        "summary" : "get Employee by id",
        "description" : "get Employee by id",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Employee"
            }
          },
          "204" : {
            "description" : "No Content. No math found for is id",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "delete Employee by id",
        "description" : "delete Employee by id",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "id",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "204" : {
            "description" : "No Content. No math found for is id",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      }
    },
    "/employee" : {
      "get" : {
        "summary" : "get Employess mached by term",
        "description" : "get Employess mached by term",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "query",
          "name" : "id",
          "type" : "integer",
          "required" : false
        }, {
          "in" : "query",
          "name" : "tenantid",
          "type" : "integer",
          "required" : false
        }, {
          "in" : "query",
          "name" : "name",
          "type" : "string",
          "required" : false
        }, {
          "in" : "query",
          "name" : "lastname",
          "type" : "string",
          "required" : false
        }, {
          "in" : "query",
          "name" : "thirdname",
          "type" : "string",
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Employee"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      },
      "post" : {
        "summary" : "create bunch of Employess",
        "description" : "create bunch of Employess",
        "produces" : [ "application/json", "application/xhtml+xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "employess",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Employee"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "409" : {
            "description" : "Conflict",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          },
          "422" : {
            "description" : "Unprocessable Entity. Not created one or more Employess",
            "schema" : {
              "$ref" : "#/definitions/ErrorMessage"
            }
          }
        },
        "security" : [ {
          "X-Auth-Token" : [ ]
        } ]
      }
    }
  },
  "definitions" : {
    "MeasurngInstrument" : {
      "description" : "Экземпляр средства измерения",
      "properties" : {
        "id" : {
          "description" : "Идентификатор объекта в БД (может быть и integer)",
          "type" : "integer",
          "example" : 8
        },
        "tenantid" : {
          "description" : "Идентификатор организации к которой принадлежит средство измерения (tenant)",
          "type" : "integer",
          "example" : 4
        },
        "name" : {
          "description" : "Наименование средства измерения или его наиболее близкой группы",
          "type" : "string",
          "example" : "Вольтметр"
        },
        "type" : {
          "$ref" : "#/definitions/MIType"
        },
        "type_refinment" : {
          "description" : "Уточнение типа, используется если отсутствует значение в поле type",
          "type" : "string",
          "example" : "ВЭ-57М"
        },
        "invnum" : {
          "description" : "Инвентарный номер прибора внутри организации",
          "type" : "string",
          "example" : "В-091"
        },
        "description" : {
          "description" : "Описание прибора или пометки (полное описание с документами хранится в других объектах)",
          "type" : "string",
          "example" : "короткое описание прибора"
        }
      }
    },
    "MIType" : {
      "description" : "Тип средства измерения в госреестре (прототип взят из госреестра)",
      "required" : [ "gosnum", "interval" ],
      "properties" : {
        "id" : {
          "description" : "Идентификатор объекта в БД (может быть и integer)",
          "type" : "integer",
          "example" : 1
        },
        "group" : {
          "description" : "Наименование СИ в госреестре РФ",
          "type" : "string",
          "example" : "Преобразователи измерительные трехканальные"
        },
        "name" : {
          "description" : "Обозначение типа СИ в госреестре РФ",
          "type" : "string",
          "example" : "Е3854ЭЛ"
        },
        "gosnum" : {
          "description" : "номер типа СИ в госреестре РФ",
          "type" : "string",
          "example" : "70318-18"
        },
        "interval" : {
          "description" : "межповерочный интервал (в месяцах)",
          "type" : "string",
          "example" : "12"
        }
      }
    },
    "Tenant" : {
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "description" : "Идентификатор в БД",
          "type" : "integer",
          "example" : 1
        },
        "name" : {
          "description" : "Наименование организации"
        }
      }
    },
    "Employee" : {
      "required" : [ "tenantid" ],
      "properties" : {
        "id" : {
          "description" : "Идентификатор объекта в БД (может быть и integer)",
          "type" : "integer",
          "example" : 3
        },
        "tenantid" : {
          "description" : "Идентификатор организации к которой принадлежит служащий (tenant)",
          "type" : "integer",
          "example" : 4
        },
        "name" : {
          "description" : "Имя",
          "type" : "string",
          "example" : "Иван"
        },
        "lastname" : {
          "description" : "Фамилия",
          "type" : "string",
          "example" : "Иванов"
        },
        "thirdname" : {
          "description" : "Отчество",
          "type" : "string",
          "example" : "Иванович"
        },
        "login" : {
          "description" : "Логин для входа в сервис",
          "type" : "string",
          "example" : "ivanov.ii"
        },
        "password" : {
          "description" : "Пароль для входа в сервис",
          "type" : "string",
          "example" : "h6vD90sIpm"
        },
        "role" : {
          "description" : "Роль административных прав в системе (распространяется только на собственную организацию)",
          "type" : "string",
          "example" : "admin"
        }
      }
    },
    "Record" : {
      "required" : [ "employeid", "date", "miid" ],
      "properties" : {
        "id" : {
          "description" : "Идентификатор объекта в БД (может быть и integer)",
          "type" : "integer",
          "example" : 82432
        },
        "employeid" : {
          "description" : "Идентификатор служащего проводившего поверку либо вносившего запись",
          "type" : "integer",
          "example" : 12
        },
        "date" : {
          "description" : "Дата проведения поверки",
          "type" : "string",
          "example" : "12.08.2015"
        },
        "miid" : {
          "description" : "Идентификатор средства змерения поверка которого проводилась",
          "type" : "integer",
          "example" : 45
        }
      }
    },
    "ErrorMessage" : {
      "properties" : {
        "code" : {
          "description" : "HTTP response code",
          "type" : "string",
          "example" : "404"
        },
        "message" : {
          "description" : "Информация об ошибке",
          "type" : "string",
          "example" : "MI not found"
        },
        "errorcount" : {
          "description" : "Количество ошибок в переданном объекте (может быть null)",
          "type" : "integer",
          "example" : 2
        },
        "errors" : {
          "description" : "Поля объекта в которых обнаружилась ошибка",
          "type" : "array",
          "items" : {
            "type" : "object"
          },
          "example" : [ {
            "id" : "not valid"
          }, {
            "tenantid" : "not valid"
          } ]
        }
      }
    },
    "Token" : {
      "properties" : {
        "token" : {
          "type" : "string"
        }
      }
    }
  }
}